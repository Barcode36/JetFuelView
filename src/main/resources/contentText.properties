PublisherPanel.help=Commands syntax :-\
  \n<Command>=TOPIC_NAME -> [Message or Filter]\
  \nUse // for comments \
  \nSupported commands :- PUBLISH, PUBLISH_DELTA, DELETE, SowDeltaSubscribe, Subscribe and Sow \n\
  \nExample of publishing a json message to a topic called TRADES_EUR, this will remove all other fields for the record\
  \nPUBLISH=TRADES_EUR -> {"ID":"DE000754","message":"Calculated using Benchmark","BID":99.552,"OFFER":99.652} \n\
  \nExample of publishing a delta json message to a topic called TRADES_EUR, this will only update the following fields on the record\
  \nPUBLISH_DELTA=TRADES_EUR -> {"ID":"DE000754","BID":100.00} \n \
  \nExample of publishing a document - Note you can only publish one doc as it publishes the whole file \
  \nPublishDoc=TRADES_EUR -> {"ID": "Record0005","STATE": "NEW",	"TIME": 20,	"PRICE": 99.652,"SALES_PERSON": "JOHN SMITH",\
  \n"COMPANIES_1": {"ID": "12345","CompanyId": "12345","Tick": "IBM","Name": "IBM Private Ltd"}\
  \n} \n\
  \nExample of using a variable \
  \nvar = ID_TO_USE1 ->"TESTID" \
  \nPUBLISH=TRADES_EUR ->  {"ID":%ID_TO_USE1,"message":"Calculated using Benchmark","BID":10,"OFFER":99.652} \n\
  \nExample of deleting a record from a topic called  TRADES_EUR \
  \nExample of waiting 1 second \
  \nWAIT -> 1 \n\
  \nExample of deleting a record from a topic called  TRADES_EUR \
  \nDELETE=TRADES_EUR -> /ID=854686321\n\
  \nExample of deleting all records from a topic called  TRADES_EUR  \
  \nDELETE=TRADES_EUR -> 1=1\n\
  \nExample of sending a Sow and Delta subscribe for a topic called TRADES_EUR. Note the filter part after -> can be empty \
  \nSowDeltaSubscribe=TRADES_EUR -> /ID=854686321\n\
  \nExample of sending a Sow and Subscribe for a topic called TRADES_EUR. Note the filter part after -> can be empty \
  \nSowSubscribe=TRADES_EUR -> /ID=854686321\n\
  \nExample of sending a Delta subscribe for a topic called TRADES_EUR. Note the filter part after -> can be empty \
  \nDeltaSubscribe=TRADES_EUR -> /ID=854686321\n\
  \nExample of sending a Sow and Delta subsribe for a topic called TRADES_EUR. Note the filter part after -> can be empty \
  \nSubscribe=TRADES_EUR -> /ID=854686321\n\
  \nExample of sending a Sow and Delta subsribe for a topic called TRADES_EUR. Note the filter part after -> can be empty \
  \nSow=TRADES_EUR -> /ID=854686321
PublisherPanel.promptText=Click on the Help [?] icon on the top right hand side for help.
FilterExamples=[String] -> /Market IS NULL;[String] -> /Market IS NOT NULL;[String] -> /Market = 'Bloomberg';[String] -> /Market like '(?i)bloomberg';[String] -> /Market != 'Bloomberg';[String] -> /Market > 'Bloomberg';\
  [String] -> /Market IN ('Bloomberg','Eurex');[String] -> /Market NOT IN ('Bloomberg','Eurex'); \
  [String] -> /Market BEGINS WITH ('Bloomberg');[String] -> /Market ENDS WITH ('Bloomberg');[String] -> /Market LIKE 'Bloomberg';\
  [Integer] -> /Bid = 85;[Integer] -> /Bid > 85;[Integer] -> /Bid BETWEEN 85 and 90;\
  [Double] -> /Quantity = 85.555;[Double] -> /Quantity = 2.55e5;[Double] -> /Quantity = 4.22e-3;[Boolean] -> /Active = 1
FilterHelp=Amps filters are formed as 'Expression1 operator Expression2'\
\n\nExpression can be :- \
\n\tIdentifier\t\t\t\tAn Xpath like identifier for a field in a message e.g. /ID or /RFQ/Market \
\n\tLiteral\t\t\t\tA Literal value like 5.5 or 'Bloomberg' \
\n\tConditional\t\t\tInlinecomparasion: IF (expression, value_if_true, value_if_false) \
\n\tArithmetic\t\t\tExpressions of combined with an arithmetic operator (+, -, *. /, %, MOD) \
\n\tValueList\t\t\t\tA list of values to be use with set operators e.g. (1,2,3) \
\n\tRegualrExpression\t\tRegular expression e.g. '.*Order' \
\n\nOperator \
\n\tComparison\t\t\t==, =, >, >=, <, <=, !=, <> \
\n\tRegexMatch\t\t\tLIKE \
\n\tSet	\t\t\t\tIN,NOT IN, BETWEEN \
\n\tString\t\t\t\tBEGINS_WITH, ENDS_WITH \
\n\nCombine filters\t\t\tAND, OR, NOT \
\n\n\n For extra options enter projections, grouping and optional conflation time:\
\n \t e.g. To project a symbol in lowercase followed by average price, grouped by symbol and updating records every 5 second use the following options \
\n \t\t projection=[lower(/symbol) as /symbol, avg(/price*/qty) as /avg_total], grouping=[/symbol], conflation=5s\
  \n Note: If using projections ensure you have an ID field of a table view otherwise the tables will not be able to find a table primary key.\
  \n Tip: Just mape a field to /ID or use a TextView
statsExtractor.help=messages_out=amps/instance/replication/LDN-BACKUP/messages_out\
\nfree=amps/host/memory/free\
\nfastPrice=amps/instance/sow/FAST_PRICE!json/valid_keys